# jira credentials
jira.server.url=http://jira.ttxrdm.com
jira.server.username=qauser
jira.server.password=Trax1234!
jira.server.project.name=Automation
jira.server.version.name=${jira.version.name}
jira.server.cycle.name=Testing Automation

# rest client property
zapi.request.header.name=Content-Type
zapi.request.header.value.json=application/json
zapi.response.status.code.success=200

# jira-zapi api path
zapi.path.get.project.list=/rest/zapi/latest/util/project-list
zapi.path.get.version.list=/rest/zapi/latest/util/versionBoard-list?projectId=${PROJECT_ID}
zapi.path.get.cycle.list=/rest/zapi/latest/cycle?projectId=${PROJECT_ID}&versionId=${VERSION_ID}
zapi.path.get.test.id=/rest/zapi/latest/execution?cycleId=${CYCLE_ID}
zapi.path.post.status=/rest/zapi/latest/execution/${TEST_ID}/execute
zapi.path.attach.file=/rest/zapi/latest/attachment?entityId=${ENTITY_ID}&entityType=EXECUTION
zapi.curl.attach.file=curl -D- -u ${USERNAME}:${PASSWORD} -X POST -H "X-Atlassian-Token: nocheck" -F "file=@${SCREENSHOT_LOCATION}" "${JIRASERVER}${JIRA_API}"

#json property
json.xpath.jira.project.id=options[?(@.label == '${PROJECT_NAME}')].value
json.xpath.jira.version.id=unreleasedVersions[?(@.label == '${VERSION_NAME}')].value
#json.xpath.jira.test.id=executions[?(@.summary == '${TEST_NAME}')].id
json.xpath.jira.test.id=executions[?(@.issueKey == '${TEST_NAME}')].id
json.body.test.status={\"status\":\"${STATUS}\",\"comment\":\"${COMMENT}\"}

#json regex for match
json.regex.match.one=(?<=executionSummary).*?(?=${CYCLE_NAME},)
json.regex.match.two=(?<=}}, ).*?(?=={totalExecutions)